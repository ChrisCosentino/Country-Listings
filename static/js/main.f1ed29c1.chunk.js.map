{"version":3,"sources":["components/Search.js","components/CountryItem.js","components/CountryList.js","App.js","index.js"],"names":["Search","query","handleQuery","id","type","placeholder","value","onChange","customStyles","content","top","left","right","bottom","marginRight","transform","CountryList","country","useState","modalIsOpen","setIsOpen","onClick","src","flag","alt","className","name","population","toLocaleString","isOpen","onRequestClose","style","contentLabel","ariaHideApp","region","capital","altSpellings","toString","currencies","map","item","key","code","symbol","topLevelDomain","list","CountryItem","App","setQuery","setList","useEffect","a","fetch","json","then","data","catch","err","console","log","message","fetchData","filteredList","filter","toLowerCase","startsWith","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAYeA,G,MAVA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAErB,OACI,0BAAMC,GAAG,oBACL,8CACA,2BAAOC,KAAK,OAAOD,GAAG,aAAaE,YAAY,wBAAwBC,MAAOL,EAAOM,SAAUL,O,iBCqDrGM,EAAe,CACjBC,QAAU,CACRC,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,0BAIfC,EApEK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAEAC,oBAAS,GAFT,mBAE1BC,EAF0B,KAEbC,EAFa,KAcjC,OACI,kBAAC,WAAD,KACA,yBAAKjB,GAAG,UAAUkB,QAZtB,WACID,GAAU,KAYN,yBAAKE,IAAKL,EAAQM,KAAMpB,GAAG,OAAOqB,IAAI,SACtC,yBAAKC,UAAU,mBACX,yBAAKtB,GAAG,QAAQc,EAAQS,KAAM,KAC9B,yBAAKvB,GAAG,cAAR,eAAkCc,EAAQU,WAAWC,oBAG7D,kBAAC,IAAD,CACIC,OAAQV,EACRW,eAjBR,WACIV,GAAU,IAiBNW,MAAOvB,EACPwB,aAAa,gBACbC,aAAa,GAEb,4BAAKhB,EAAQS,MACb,4BACI,2CAAiBT,EAAQU,WAAWC,kBACpC,uCAAaX,EAAQiB,QACrB,wCAAcjB,EAAQkB,SACtB,oDAA0BlB,EAAQmB,aAAaC,YAC/C,2CACA,4BAEKpB,EAAQqB,WAAWC,KAAI,SAAAC,GAAI,OACxB,kBAAC,WAAD,CAAUC,IAAKD,EAAKE,MAChB,uCAAaF,EAAKG,QAClB,qCAAWH,EAAKE,MAChB,qCAAWF,EAAKd,WAMxB,uCAAaT,EAAQ2B,eAAeP,gBCtCzCrB,EAXK,SAAC,GAAc,IAAZ6B,EAAW,EAAXA,KAEnB,OACI,yBAAKpB,UAAU,qBACVoB,EAAKN,KAAI,SAACC,GACP,OAAO,kBAACM,EAAD,CAAaL,IAAKD,EAAKd,KAAMT,QAASuB,SC+B9CO,EAlCH,WAAO,IAAD,EAEY7B,mBAAS,IAFrB,mBAEPjB,EAFO,KAEA+C,EAFA,OAGU9B,mBAAS,IAHnB,mBAGP2B,EAHO,KAGDI,EAHC,KAQdC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sEACoBC,MAAM,wCAD1B,cAGKC,OACAC,MAAK,SAAAC,GAAI,OAAIN,EAAQM,MACrBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,YALlC,4CADc,uBAAC,WAAD,wBAQdC,KACC,IAEH,IAIMC,EAAejB,EAAKkB,QAAO,SAAA9C,GAAO,OAAIA,EAAQS,KAAKsC,cAAcC,WAAWhE,EAAM+D,kBAExF,OACE,6BAEE,kBAAC,EAAD,CAAQ/D,MAAOA,EAAOC,YATN,SAACgE,GACjBlB,EAASkB,EAAEC,OAAO7D,UASlB,kBAAC,EAAD,CAAauC,KAAMiB,MC9B3BM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f1ed29c1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Search = ({ query, handleQuery }) => {\n\n    return (\n        <form id=\"search-container\">\n            <h1>Country Search</h1>\n            <input type=\"text\" id=\"search-box\" placeholder=\"Search for country...\" value={query} onChange={handleQuery} />\n        </form>\n    )\n}\n\nexport default Search\n\n","import React, { useState, Fragment } from 'react'\nimport Modal from 'react-modal'\n\nconst CountryList = ({ country }) => {\n\n    const [modalIsOpen, setIsOpen] = useState(false);\n\n    function openModal(){\n        setIsOpen(true);\n    }\n    \n    function closeModal(){\n        setIsOpen(false);\n    }\n\n    \n    \n    return (\n        <Fragment>\n        <div id=\"country\" onClick={openModal}>\n            <img src={country.flag} id=\"flag\" alt=\"flag\" />\n            <div className=\"country-details\">\n                <div id=\"name\">{country.name}{' '}</div>\n                <div id=\"population\">Population: {country.population.toLocaleString()}</div>\n            </div>\n        </div>\n        <Modal \n            isOpen={modalIsOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel=\"Country Modal\"\n            ariaHideApp={false}\n        >\n            <h1>{country.name}</h1>\n            <ul>\n                <li>Population: {country.population.toLocaleString()}</li>\n                <li>Region: {country.region}</li>\n                <li>Capital: {country.capital}</li>\n                <li>Alternate spellings: {country.altSpellings.toString()}</li>\n                <li>Currencies:</li>\n                <ul>\n                    \n                    {country.currencies.map(item => (\n                        <Fragment key={item.code}>\n                            <li>Symbol: {item.symbol}</li>\n                            <li>Code: {item.code}</li>\n                            <li>Name: {item.name}</li>\n                        </Fragment>\n                        \n                       \n                    ))}\n                </ul>\n                    <li>Domain: {country.topLevelDomain.toString()}</li>\n                {/* <li>Currencies: {country.currencies}</li> */}\n            </ul>\n        </Modal>\n        </Fragment>\n    )\n}\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\n\nexport default CountryList\n\n","import React from 'react';\nimport CountryItem  from '../components/CountryItem';\n\nconst CountryList = ({ list }) => {\n\n    return (\n        <div className=\"country-container\">\n            {list.map((item) => {\n                return <CountryItem key={item.name} country={item}/>\n            })}\n        </div>\n    )\n}\n\nexport default CountryList;","import React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport Search from './components/Search';\nimport CountryList from './components/CountryList';\n\nconst App = () => {\n\n    const [query, setQuery] = useState('');\n    const [list, setList] = useState([]);\n\n    // const list = ['tree', 'horse', 'cat', 'dog', 'hook'];\n    \n\n    useEffect(() => {\n      async function fetchData(){\n        const res = await fetch('https://restcountries.eu/rest/v2/all');\n        res\n          .json()\n          .then(data => setList(data))\n          .catch(err => console.log(err.message))\n      }\n      fetchData();\n    }, [])\n\n    const handleQuery = (e) => {\n        setQuery(e.target.value);\n    }\n\n    const filteredList = list.filter(country => country.name.toLowerCase().startsWith(query.toLowerCase()));\n    \n    return (\n      <div>\n      \n        <Search query={query} handleQuery={handleQuery} />\n        <CountryList list={filteredList} />\n      </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}